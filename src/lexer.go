// Code generated by re2c 3.0 on Wed Jan 11 15:04:52 2023, DO NOT EDIT.
package main

const (
    TEof        = 0
    TInvalid    = 1
    TPLBefore   = 2
    TPLNewline  = 3
    TPLValue    = 4
    TPLInc      = 5
    TPLDec      = 6
    TPLPound    = 7
    TPLSlash    = 8
    TPLAfter    = 9
)

type LexToken struct {
    begin, end, kind uint32
}

func lexNextToken(input []byte, cursor uint) LexToken {
	var began uint = cursor
    var marker uint = 0
    peek_next := func(str []byte, i uint) byte {
        if i < uint(len(str)) {
            return str[i]
        } else {
            return 0
        }
    }
lex_start:
    
{
	var yych byte
	yyaccept := 0
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00:
		goto yy1
	case 0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,'\t':
		fallthrough
	case '\v','\f','\r',0x0E,0x0F,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,0x1E,0x1F,' ':
		fallthrough
	case 0x85:
		goto yy2
	case '\n':
		goto yy4
	case '!':
		goto yy5
	case '"':
		goto yy7
	case '#':
		goto yy9
	case '$':
		goto yy10
	case '%':
		fallthrough
	case '^':
		goto yy11
	case '&':
		goto yy12
	case '\'':
		goto yy13
	case '(':
		goto yy15
	case ')':
		goto yy16
	case '*':
		goto yy17
	case '+':
		goto yy18
	case ',':
		fallthrough
	case '~':
		goto yy19
	case '-':
		goto yy20
	case '.':
		goto yy21
	case '/':
		goto yy22
	case '0':
		goto yy24
	case '1','2','3','4','5','6','7','8','9':
		goto yy25
	case ':':
		goto yy27
	case ';':
		goto yy28
	case '<':
		goto yy29
	case '=':
		goto yy30
	case '>':
		goto yy32
	case '?':
		goto yy33
	case '@':
		fallthrough
	case 0x7F:
		goto yy34
	case 'L':
		fallthrough
	case 'U':
		goto yy38
	case '[':
		goto yy39
	case '\\':
		goto yy40
	case ']':
		goto yy41
	case '`':
		goto yy42
	case 'a':
		goto yy43
	case 'c':
		goto yy44
	case 'e':
		goto yy45
	case 'f':
		goto yy46
	case 'j':
		goto yy47
	case 'l':
		goto yy48
	case 'q':
		goto yy49
	case 's':
		goto yy50
	case 'u':
		goto yy51
	case 'v':
		goto yy52
	case 'w':
		goto yy53
	case '{':
		goto yy54
	case '|':
		goto yy55
	case '}':
		goto yy56
	default:
		goto yy35
	}
yy1:
	cursor++
	{
            return LexToken{0, 0, TEof}
        }
yy2:
	yyaccept = 0
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,'\t':
		fallthrough
	case '\v','\f','\r',0x0E,0x0F,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,0x1E,0x1F,' ':
		fallthrough
	case 0x85:
		goto yy2
	case '/':
		goto yy57
	case '\\':
		goto yy59
	default:
		goto yy3
	}
yy3:
	{
            began = cursor
            goto lex_start
        }
yy4:
	cursor++
	{
            return LexToken{uint32(began), uint32(cursor), TPLNewline}
        }
yy5:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '=':
		goto yy60
	default:
		goto yy6
	}
yy6:
	{
            return LexToken{uint32(began), uint32(cursor), TOther}
        }
yy7:
	yyaccept = 1
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00:
		fallthrough
	case '\n':
		goto yy8
	default:
		goto yy63
	}
yy8:
	{
            return LexToken{0, 0, TInvalid}
        }
yy9:
	cursor++
	{
            return LexToken{uint32(began), uint32(cursor), TPLPound}
        }
yy10:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '{':
		goto yy66
	default:
		goto yy8
	}
yy11:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '=':
		goto yy67
	default:
		goto yy6
	}
yy12:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '&':
		fallthrough
	case '=':
		goto yy67
	default:
		goto yy6
	}
yy13:
	yyaccept = 2
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00:
		fallthrough
	case '\n':
		goto yy14
	case '\'':
		goto yy25
	case '.':
		goto yy70
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy13
	case 'E':
		fallthrough
	case 'e':
		goto yy71
	case 'L':
		fallthrough
	case 'U':
		fallthrough
	case 'Z':
		fallthrough
	case 'l':
		fallthrough
	case 'u':
		fallthrough
	case 'z':
		goto yy72
	case '\\':
		goto yy73
	case 'n':
		goto yy74
	default:
		goto yy68
	}
yy14:
	{
            return LexToken{uint32(began), uint32(cursor), TPLValue}
        }
yy15:
	cursor++
	{
            return LexToken{uint32(began), uint32(cursor), TLCircle}
        }
yy16:
	cursor++
	{
            return LexToken{uint32(began), uint32(cursor), TRCircle}
        }
yy17:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '*':
		goto yy60
	case '=':
		goto yy67
	default:
		goto yy6
	}
yy18:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '+':
		goto yy75
	case '=':
		goto yy67
	default:
		goto yy6
	}
yy19:
	cursor++
	goto yy6
yy20:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '-':
		goto yy76
	case '=':
		goto yy67
	case '>':
		goto yy77
	default:
		goto yy6
	}
yy21:
	yyaccept = 3
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\'':
		fallthrough
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy78
	case '.':
		goto yy79
	default:
		goto yy6
	}
yy22:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '*':
		goto yy80
	case '/':
		goto yy81
	case '=':
		goto yy67
	default:
		goto yy23
	}
yy23:
	{
            return LexToken{uint32(began), uint32(cursor), TPLSlash}
        }
yy24:
	yyaccept = 2
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'B':
		fallthrough
	case 'b':
		goto yy82
	case 'O':
		fallthrough
	case 'o':
		goto yy85
	case 'X':
		fallthrough
	case 'x':
		goto yy86
	default:
		goto yy26
	}
yy25:
	yyaccept = 2
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
yy26:
	switch (yych) {
	case '\'':
		fallthrough
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy25
	case '.':
		goto yy78
	case 'E':
		fallthrough
	case 'e':
		goto yy83
	case 'L':
		fallthrough
	case 'U':
		fallthrough
	case 'Z':
		fallthrough
	case 'l':
		fallthrough
	case 'u':
		fallthrough
	case 'z':
		goto yy84
	case 'n':
		goto yy64
	default:
		goto yy14
	}
yy27:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case ':':
		goto yy67
	default:
		goto yy6
	}
yy28:
	cursor++
	{
            return LexToken{uint32(began), uint32(cursor), TSemi}
        }
yy29:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '<':
		goto yy60
	case '=':
		goto yy87
	default:
		goto yy6
	}
yy30:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '=':
		goto yy60
	default:
		goto yy31
	}
yy31:
	{
            return LexToken{uint32(began), uint32(cursor), TEq}
        }
yy32:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '=':
		goto yy60
	case '>':
		goto yy88
	default:
		goto yy6
	}
yy33:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '?':
		goto yy60
	default:
		goto yy6
	}
yy34:
	cursor++
	goto yy8
yy35:
	cursor++
	yych = peek_next(input, cursor)
yy36:
	switch (yych) {
	case 0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,'\t','\n','\v','\f','\r',0x0E,0x0F,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,0x1E,0x1F,' ','!','"','#','$','%','&','\'','(',')','*','+',',','-','.','/':
		fallthrough
	case ':',';','<','=','>','?','@':
		fallthrough
	case '[','\\',']','^':
		fallthrough
	case '`':
		fallthrough
	case '{','|','}','~',0x7F:
		fallthrough
	case 0x85:
		goto yy37
	default:
		goto yy35
	}
yy37:
	{
            return LexToken{uint32(began), uint32(cursor), TIdentifier}
        }
yy38:
	yyaccept = 4
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
	switch (yych) {
	case '"':
		goto yy62
	case '\'':
		goto yy68
	default:
		goto yy36
	}
yy39:
	cursor++
	{
            return LexToken{uint32(began), uint32(cursor), TLSquare}
        }
yy40:
	yyaccept = 1
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\n':
		goto yy2
	case '\r':
		goto yy89
	default:
		goto yy8
	}
yy41:
	cursor++
	{
            return LexToken{uint32(began), uint32(cursor), TRSquare}
        }
yy42:
	cursor++
	{
            return LexToken{uint32(began), uint32(cursor), TTick}
        }
yy43:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 's':
		goto yy90
	default:
		goto yy36
	}
yy44:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'l':
		goto yy91
	case 'o':
		goto yy92
	default:
		goto yy36
	}
yy45:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'n':
		goto yy93
	default:
		goto yy36
	}
yy46:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'o':
		goto yy94
	case 'u':
		goto yy95
	default:
		goto yy36
	}
yy47:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 's':
		goto yy96
	default:
		goto yy36
	}
yy48:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'e':
		goto yy97
	default:
		goto yy36
	}
yy49:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'u':
		goto yy98
	default:
		goto yy36
	}
yy50:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 't':
		goto yy99
	default:
		goto yy36
	}
yy51:
	yyaccept = 4
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
	switch (yych) {
	case '"':
		goto yy62
	case '\'':
		goto yy68
	case '8':
		goto yy38
	case 'n':
		goto yy100
	default:
		goto yy36
	}
yy52:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'a':
		goto yy101
	default:
		goto yy36
	}
yy53:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'h':
		goto yy102
	default:
		goto yy36
	}
yy54:
	cursor++
	{
            return LexToken{uint32(began), uint32(cursor), TLBrace}
        }
yy55:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '=':
		fallthrough
	case '|':
		goto yy67
	default:
		goto yy6
	}
yy56:
	cursor++
	{
            return LexToken{uint32(began), uint32(cursor), TRBrace}
        }
yy57:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '/':
		goto yy81
	default:
		goto yy58
	}
yy58:
	cursor = marker
	switch (yyaccept) {
	case 0:
		goto yy3
	case 1:
		goto yy8
	case 2:
		goto yy14
	case 3:
		goto yy6
	default:
		goto yy37
	}
yy59:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\n':
		goto yy2
	case '\r':
		goto yy89
	default:
		goto yy58
	}
yy60:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '=':
		goto yy67
	default:
		goto yy61
	}
yy61:
	{
            return LexToken{uint32(began), uint32(cursor), TOther}
        }
yy62:
	cursor++
	yych = peek_next(input, cursor)
yy63:
	switch (yych) {
	case 0x00:
		fallthrough
	case '\n':
		goto yy58
	case '"':
		goto yy64
	case '\\':
		goto yy65
	default:
		goto yy62
	}
yy64:
	cursor++
	goto yy14
yy65:
	cursor++
	yych = peek_next(input, cursor)
	if (yych <= 0x00) {
		goto yy58
	}
	goto yy62
yy66:
	cursor++
	{
            return LexToken{uint32(began), uint32(cursor), TDollarLBrace}
        }
yy67:
	cursor++
	goto yy61
yy68:
	cursor++
	yych = peek_next(input, cursor)
yy69:
	switch (yych) {
	case 0x00:
		fallthrough
	case '\n':
		goto yy58
	case '\'':
		goto yy64
	case '\\':
		goto yy73
	default:
		goto yy68
	}
yy70:
	yyaccept = 2
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00:
		fallthrough
	case '\n':
		goto yy14
	case '\'':
		goto yy78
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy70
	case 'B':
		goto yy103
	case 'E':
		fallthrough
	case 'e':
		goto yy71
	case 'F':
		fallthrough
	case 'f':
		goto yy104
	case 'L':
		fallthrough
	case 'l':
		goto yy74
	case '\\':
		goto yy73
	case 'b':
		goto yy105
	default:
		goto yy68
	}
yy71:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\'':
		goto yy106
	case '+':
		fallthrough
	case '-':
		goto yy107
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy108
	default:
		goto yy69
	}
yy72:
	yyaccept = 2
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00:
		fallthrough
	case '\n':
		goto yy14
	case '\'':
		goto yy64
	case 'L':
		fallthrough
	case 'U':
		fallthrough
	case 'Z':
		fallthrough
	case 'l':
		fallthrough
	case 'u':
		fallthrough
	case 'z':
		goto yy72
	case '\\':
		goto yy73
	default:
		goto yy68
	}
yy73:
	cursor++
	yych = peek_next(input, cursor)
	if (yych <= 0x00) {
		goto yy58
	}
	goto yy68
yy74:
	yyaccept = 2
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00:
		fallthrough
	case '\n':
		goto yy14
	default:
		goto yy69
	}
yy75:
	cursor++
	{
            return LexToken{uint32(began), uint32(cursor), TPLInc}
        }
yy76:
	cursor++
	{
            return LexToken{uint32(began), uint32(cursor), TPLDec}
        }
yy77:
	cursor++
	{
            return LexToken{uint32(began), uint32(cursor), TMinusGt}
        }
yy78:
	yyaccept = 2
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\'':
		fallthrough
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy78
	case 'B':
		goto yy109
	case 'E':
		fallthrough
	case 'e':
		goto yy83
	case 'F':
		fallthrough
	case 'f':
		goto yy110
	case 'L':
		fallthrough
	case 'l':
		goto yy64
	case 'b':
		goto yy111
	default:
		goto yy14
	}
yy79:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '.':
		goto yy67
	default:
		goto yy58
	}
yy80:
	cursor++
	{
            for ;; {
                yych = peek_next(input, cursor)
                cursor++
                if yych == 0 {
                    return LexToken{0, 0, TEof}
                } else if yych == '*' {
                    yych = peek_next(input, cursor)
                    if yych == 0 {
                        return LexToken{0, 0, TEof}
                    } else if yych == '/' {
                        cursor++;
                        began = cursor
                        goto lex_start
                    }
                }
            }
        }
yy81:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00:
		fallthrough
	case '\n':
		goto yy3
	case '\\':
		goto yy112
	default:
		goto yy81
	}
yy82:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\'':
		fallthrough
	case '0','1':
		goto yy113
	default:
		goto yy58
	}
yy83:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\'':
		fallthrough
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy106
	case '+':
		fallthrough
	case '-':
		goto yy114
	default:
		goto yy58
	}
yy84:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'L':
		fallthrough
	case 'U':
		fallthrough
	case 'Z':
		fallthrough
	case 'l':
		fallthrough
	case 'u':
		fallthrough
	case 'z':
		goto yy84
	default:
		goto yy14
	}
yy85:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\'':
		fallthrough
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy115
	default:
		goto yy58
	}
yy86:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\'':
		fallthrough
	case '0','1','2','3','4','5','6','7','8','9':
		fallthrough
	case 'A','B','C','D','E','F':
		fallthrough
	case 'a','b','c','d','e','f':
		goto yy116
	case '.':
		goto yy117
	default:
		goto yy58
	}
yy87:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '=','>':
		goto yy67
	default:
		goto yy61
	}
yy88:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '=':
		goto yy67
	case '>':
		goto yy60
	default:
		goto yy61
	}
yy89:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\n':
		goto yy2
	default:
		goto yy58
	}
yy90:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'y':
		goto yy118
	default:
		goto yy36
	}
yy91:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'a':
		goto yy119
	default:
		goto yy36
	}
yy92:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'n':
		goto yy120
	default:
		goto yy36
	}
yy93:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'u':
		goto yy121
	default:
		goto yy36
	}
yy94:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'r':
		goto yy122
	default:
		goto yy36
	}
yy95:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'n':
		goto yy124
	default:
		goto yy36
	}
yy96:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'c':
		goto yy125
	default:
		goto yy36
	}
yy97:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 't':
		goto yy126
	default:
		goto yy36
	}
yy98:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'o':
		goto yy128
	default:
		goto yy36
	}
yy99:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'r':
		goto yy129
	default:
		goto yy36
	}
yy100:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'd':
		goto yy130
	case 'i':
		goto yy131
	default:
		goto yy36
	}
yy101:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'r':
		goto yy126
	default:
		goto yy36
	}
yy102:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'i':
		goto yy132
	default:
		goto yy36
	}
yy103:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'F':
		goto yy133
	default:
		goto yy69
	}
yy104:
	yyaccept = 2
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00:
		fallthrough
	case '\n':
		goto yy14
	case '1':
		goto yy134
	case '3':
		goto yy135
	case '6':
		goto yy136
	default:
		goto yy69
	}
yy105:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'f':
		goto yy133
	default:
		goto yy69
	}
yy106:
	yyaccept = 2
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\'':
		fallthrough
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy106
	case 'B':
		goto yy109
	case 'F':
		fallthrough
	case 'f':
		goto yy110
	case 'L':
		fallthrough
	case 'l':
		goto yy64
	case 'b':
		goto yy111
	default:
		goto yy14
	}
yy107:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\'':
		goto yy106
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy108
	default:
		goto yy69
	}
yy108:
	yyaccept = 2
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00:
		fallthrough
	case '\n':
		goto yy14
	case '\'':
		goto yy106
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy108
	case 'B':
		goto yy103
	case 'F':
		fallthrough
	case 'f':
		goto yy104
	case 'L':
		fallthrough
	case 'l':
		goto yy74
	case '\\':
		goto yy73
	case 'b':
		goto yy105
	default:
		goto yy68
	}
yy109:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'F':
		goto yy137
	default:
		goto yy58
	}
yy110:
	yyaccept = 2
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
	switch (yych) {
	case '1':
		goto yy138
	case '3':
		goto yy139
	case '6':
		goto yy140
	default:
		goto yy14
	}
yy111:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'f':
		goto yy137
	default:
		goto yy58
	}
yy112:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00:
		goto yy3
	case '\n':
		goto yy2
	case '\r':
		goto yy141
	case '\\':
		goto yy112
	default:
		goto yy81
	}
yy113:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\'':
		fallthrough
	case '0','1':
		goto yy113
	case 'L':
		fallthrough
	case 'U':
		fallthrough
	case 'Z':
		fallthrough
	case 'l':
		fallthrough
	case 'u':
		fallthrough
	case 'z':
		goto yy84
	case 'n':
		goto yy64
	default:
		goto yy14
	}
yy114:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\'':
		fallthrough
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy106
	default:
		goto yy58
	}
yy115:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\'':
		fallthrough
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy115
	case 'L':
		fallthrough
	case 'U':
		fallthrough
	case 'Z':
		fallthrough
	case 'l':
		fallthrough
	case 'u':
		fallthrough
	case 'z':
		goto yy84
	case 'n':
		goto yy64
	default:
		goto yy14
	}
yy116:
	yyaccept = 2
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\'':
		fallthrough
	case '0','1','2','3','4','5','6','7','8','9':
		fallthrough
	case 'A','B','C','D','E','F':
		fallthrough
	case 'a','b','c','d','e','f':
		goto yy116
	case '.':
		goto yy142
	case 'L':
		fallthrough
	case 'U':
		fallthrough
	case 'Z':
		fallthrough
	case 'l':
		fallthrough
	case 'u':
		fallthrough
	case 'z':
		goto yy84
	case 'P':
		fallthrough
	case 'p':
		goto yy144
	case 'n':
		goto yy64
	default:
		goto yy14
	}
yy117:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'P':
		fallthrough
	case 'p':
		goto yy58
	default:
		goto yy143
	}
yy118:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'n':
		goto yy145
	default:
		goto yy36
	}
yy119:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 's':
		goto yy146
	default:
		goto yy36
	}
yy120:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 's':
		goto yy147
	default:
		goto yy36
	}
yy121:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'm':
		goto yy148
	default:
		goto yy36
	}
yy122:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,'\t','\n','\v','\f','\r',0x0E,0x0F,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,0x1E,0x1F,' ','!','"','#','$','%','&','\'','(',')','*','+',',','-','.','/':
		fallthrough
	case ':',';','<','=','>','?','@':
		fallthrough
	case '[','\\',']','^':
		fallthrough
	case '`':
		fallthrough
	case '{','|','}','~',0x7F:
		fallthrough
	case 0x85:
		goto yy123
	default:
		goto yy35
	}
yy123:
	{
            return LexToken{uint32(began), uint32(cursor), TFunctionForWhileJsclass}
        }
yy124:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'c':
		goto yy150
	default:
		goto yy36
	}
yy125:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'l':
		goto yy151
	default:
		goto yy36
	}
yy126:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,'\t','\n','\v','\f','\r',0x0E,0x0F,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,0x1E,0x1F,' ','!','"','#','$','%','&','\'','(',')','*','+',',','-','.','/':
		fallthrough
	case ':',';','<','=','>','?','@':
		fallthrough
	case '[','\\',']','^':
		fallthrough
	case '`':
		fallthrough
	case '{','|','}','~',0x7F:
		fallthrough
	case 0x85:
		goto yy127
	default:
		goto yy35
	}
yy127:
	{
            return LexToken{uint32(began), uint32(cursor), TJsOnly}
        }
yy128:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 't':
		goto yy152
	default:
		goto yy36
	}
yy129:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'u':
		goto yy153
	default:
		goto yy36
	}
yy130:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'e':
		goto yy154
	default:
		goto yy36
	}
yy131:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'o':
		goto yy155
	default:
		goto yy36
	}
yy132:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'l':
		goto yy156
	default:
		goto yy36
	}
yy133:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '1':
		goto yy157
	default:
		goto yy69
	}
yy134:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '2':
		goto yy158
	case '6':
		goto yy74
	default:
		goto yy69
	}
yy135:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '2':
		goto yy74
	default:
		goto yy69
	}
yy136:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '4':
		goto yy74
	default:
		goto yy69
	}
yy137:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '1':
		goto yy159
	default:
		goto yy58
	}
yy138:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '2':
		goto yy160
	case '6':
		goto yy64
	default:
		goto yy58
	}
yy139:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '2':
		goto yy64
	default:
		goto yy58
	}
yy140:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '4':
		goto yy64
	default:
		goto yy58
	}
yy141:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00:
		goto yy3
	case '\n':
		goto yy2
	case '\\':
		goto yy112
	default:
		goto yy81
	}
yy142:
	cursor++
	yych = peek_next(input, cursor)
yy143:
	switch (yych) {
	case '\'':
		fallthrough
	case '0','1','2','3','4','5','6','7','8','9':
		fallthrough
	case 'A','B','C','D','E','F':
		fallthrough
	case 'a','b','c','d','e','f':
		goto yy142
	case 'P':
		fallthrough
	case 'p':
		goto yy144
	default:
		goto yy58
	}
yy144:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\'':
		fallthrough
	case '0','1','2','3','4','5','6','7','8','9':
		fallthrough
	case 'A','B','C','D','E','F':
		fallthrough
	case 'a','b','c','d','e','f':
		goto yy161
	case '+':
		fallthrough
	case '-':
		goto yy162
	default:
		goto yy58
	}
yy145:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'c':
		goto yy126
	default:
		goto yy36
	}
yy146:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 's':
		goto yy148
	default:
		goto yy36
	}
yy147:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 't':
		goto yy163
	default:
		goto yy36
	}
yy148:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,'\t','\n','\v','\f','\r',0x0E,0x0F,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,0x1E,0x1F,' ','!','"','#','$','%','&','\'','(',')','*','+',',','-','.','/':
		fallthrough
	case ':',';','<','=','>','?','@':
		fallthrough
	case '[','\\',']','^':
		fallthrough
	case '`':
		fallthrough
	case '{','|','}','~',0x7F:
		fallthrough
	case 0x85:
		goto yy149
	default:
		goto yy35
	}
yy149:
	{
            return LexToken{uint32(began), uint32(cursor), TStructUnionEnumClass}
        }
yy150:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 't':
		goto yy165
	default:
		goto yy36
	}
yy151:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'a':
		goto yy166
	default:
		goto yy36
	}
yy152:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'e':
		goto yy167
	default:
		goto yy36
	}
yy153:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'c':
		goto yy169
	default:
		goto yy36
	}
yy154:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'f':
		goto yy170
	default:
		goto yy36
	}
yy155:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'n':
		goto yy148
	default:
		goto yy36
	}
yy156:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'e':
		goto yy122
	default:
		goto yy36
	}
yy157:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '6':
		goto yy74
	default:
		goto yy69
	}
yy158:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '8':
		goto yy74
	default:
		goto yy69
	}
yy159:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '6':
		goto yy64
	default:
		goto yy58
	}
yy160:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '8':
		goto yy64
	default:
		goto yy58
	}
yy161:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\'':
		fallthrough
	case '0','1','2','3','4','5','6','7','8','9':
		fallthrough
	case 'A','B','C','D','E','F':
		fallthrough
	case 'a','b','c','d','e','f':
		goto yy161
	case 'L':
		fallthrough
	case 'l':
		goto yy64
	default:
		goto yy14
	}
yy162:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case '\'':
		fallthrough
	case '0','1','2','3','4','5','6','7','8','9':
		fallthrough
	case 'A','B','C','D','E','F':
		fallthrough
	case 'a','b','c','d','e','f':
		goto yy161
	default:
		goto yy58
	}
yy163:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,'\t','\n','\v','\f','\r',0x0E,0x0F,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,0x1E,0x1F,' ','!','"','#','$','%','&','\'','(',')','*','+',',','-','.','/':
		fallthrough
	case ':',';','<','=','>','?','@':
		fallthrough
	case '[','\\',']','^':
		fallthrough
	case '`':
		fallthrough
	case '{','|','}','~',0x7F:
		fallthrough
	case 0x85:
		goto yy164
	default:
		goto yy35
	}
yy164:
	{ 
            return LexToken{uint32(began), uint32(cursor), TConst} 
        }
yy165:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'i':
		goto yy171
	default:
		goto yy36
	}
yy166:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 's':
		goto yy172
	default:
		goto yy36
	}
yy167:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,'\t','\n','\v','\f','\r',0x0E,0x0F,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,0x1E,0x1F,' ','!','"','#','$','%','&','\'','(',')','*','+',',','-','.','/':
		fallthrough
	case ':',';','<','=','>','?','@':
		fallthrough
	case '[','\\',']','^':
		fallthrough
	case '`':
		fallthrough
	case '{','|','}','~',0x7F:
		fallthrough
	case 0x85:
		goto yy168
	default:
		goto yy35
	}
yy168:
	{
            return LexToken{uint32(began), uint32(cursor), TQuote}
        }
yy169:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 't':
		goto yy148
	default:
		goto yy36
	}
yy170:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'i':
		goto yy173
	default:
		goto yy36
	}
yy171:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'o':
		goto yy174
	default:
		goto yy36
	}
yy172:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 's':
		goto yy175
	default:
		goto yy36
	}
yy173:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'n':
		goto yy177
	default:
		goto yy36
	}
yy174:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'n':
		goto yy122
	default:
		goto yy36
	}
yy175:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,'\t','\n','\v','\f','\r',0x0E,0x0F,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,0x1E,0x1F,' ','!','"','#','$','%','&','\'','(',')','*','+',',','-','.','/':
		fallthrough
	case ':',';','<','=','>','?','@':
		fallthrough
	case '[','\\',']','^':
		fallthrough
	case '`':
		fallthrough
	case '{','|','}','~',0x7F:
		fallthrough
	case 0x85:
		goto yy176
	default:
		goto yy35
	}
yy176:
	{
            input[began] = ' '
            input[began+1] = ' '
            return LexToken{uint32(began+2), uint32(cursor), TFunctionForWhileJsclass}
        }
yy177:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'e':
		goto yy178
	default:
		goto yy36
	}
yy178:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'd':
		goto yy126
	default:
		goto yy36
	}
}

}

func lexRegexpLit(input []byte, cursor uint) LexToken {
    var began uint = cursor
    var marker uint = 0
    peek_next := func(str []byte, i uint) byte {
        if i < uint(len(str)) {
            return str[i]
        } else {
            return 0
        }
    }
    
{
	var yych byte
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00:
		goto yy180
	case '/':
		goto yy183
	default:
		goto yy181
	}
yy180:
	cursor++
	{
            return LexToken{0, 0, TEof}
        }
yy181:
	cursor++
yy182:
	{
            return LexToken{0, 0, TInvalid}
        }
yy183:
	cursor++
	marker = cursor
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00:
		fallthrough
	case '\n':
		fallthrough
	case '/':
		goto yy182
	default:
		goto yy185
	}
yy184:
	cursor++
	yych = peek_next(input, cursor)
yy185:
	switch (yych) {
	case 0x00:
		fallthrough
	case '\n':
		goto yy186
	case '/':
		goto yy189
	case '[':
		goto yy187
	case '\\':
		goto yy188
	default:
		goto yy184
	}
yy186:
	cursor = marker
	goto yy182
yy187:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 0x00:
		fallthrough
	case '\n':
		fallthrough
	case '/':
		goto yy186
	case '\\':
		goto yy191
	case ']':
		goto yy184
	default:
		goto yy187
	}
yy188:
	cursor++
	yych = peek_next(input, cursor)
	if (yych <= 0x00) {
		goto yy186
	}
	goto yy184
yy189:
	cursor++
	yych = peek_next(input, cursor)
	switch (yych) {
	case 'd':
		fallthrough
	case 'g':
		fallthrough
	case 'i':
		fallthrough
	case 'm':
		fallthrough
	case 's':
		fallthrough
	case 'u','v':
		fallthrough
	case 'y':
		goto yy189
	default:
		goto yy190
	}
yy190:
	{
            return LexToken{uint32(began), uint32(cursor), TOther}
        }
yy191:
	cursor++
	yych = peek_next(input, cursor)
	if (yych <= 0x00) {
		goto yy186
	}
	goto yy187
}

}

func lexTickLit(input []byte, cursor uint) LexToken {
    var began uint = cursor
    var ch byte
    for ;; {
        if cursor < uint(len(input)) {
            ch = input[cursor]
            cursor++
        } else {
            return LexToken{0, 0, TInvalid}
        }
        if ch == '\\' {
            if cursor < uint(len(input)) {
                cursor++ 
            } else {
                return LexToken{0, 0, TInvalid}
            }
        } else if ch == '`' {
            if (began+1) == cursor {
                return LexToken{uint32(began), uint32(cursor), TTick}
            } else {
                return LexToken{uint32(began), uint32(cursor-1), TOther}
            }
        } else if (ch == '$') {
            if cursor < uint(len(input)) {
                ch = input[cursor]
                cursor++
            } else {
                return LexToken{0, 0, TInvalid}
            }
            if (ch == '{') {
                if (began+2) == cursor {
                    return LexToken{uint32(began), uint32(cursor), TDollarLBrace}
                } else {
                    return LexToken{uint32(began), uint32(cursor-2), TOther}
                }
            }
        }
    }
}